{{~
func com
    if !for.last 
        ret ','
    end
end
~}}


Blockly.Blocks['{{blockname}}'] = {
    init: function() {
        this.appendStatementInput('VALUE_INPUT')
            .appendField('{{jsfunction}}');
        // Params data
{{~ for p in parameters ~}} 
        this.appendValueInput('{{p.name}}')
            .setCheck('{{p.type}}')
            .appendField('{{p.name}}');
{{~ end ~}}

        this.setColour('{{color}}');
        this.setTooltip('{{description}}');
        this.setHelpUrl('{{url}}');
    }
};
javascript.javascriptGenerator.forBlock['{{blockname}}'] = (block, generator) => {
    const innerCode = generator.statementToCode(block, 'VALUE_INPUT');
{{if parameters.size == 0}}
    return `{{jsfunction}}.connect(() => {
        ${innerCode}
    });`;
{{else}}
    return [`{{jsfunction}}.connect(() => {
        ${innerCode}
    });`, javascript.javascriptGenerator.ORDER_NONE]
{{end}}
};