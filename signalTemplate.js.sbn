{{~
func com
    if !for.last 
        ret ','
    end
end
~}}

// Blockly signal
Blockly.Blocks['{{blockname}}'] = {
    init: function() {
        this.appendStatementInput('VALUE_INPUT')
            .appendField('{{jsfunction}}');

        this.setColour('{{color}}');
        this.setTooltip('{{description}}');
        this.setHelpUrl('{{url}}');
    }
};
javascript.javascriptGenerator.forBlock['{{blockname}}'] = (block, generator) => {
    const innerCode = generator.statementToCode(block, 'VALUE_INPUT');
    return `{{jsfunction}}.connect(() => {
        ${innerCode}
    });\n`;
};