{{~
func com
    if !for.last 
        ret ','
    end
end
~}}


Blockly.Blocks['{{blockname}}'] = {
    init: function() {
        this.appendDummyInput()
            .appendField('{{jsfunction}}')       
        this.setOutput(true, '{{returns}}');
        // Params data
{{~ for p in properties ~}} 
        this.appendValueInput('{{p.name}}') 
{{~ if p.type != "Any" ~}}
            .setCheck('{{p.type}}')
{{~ end ~}}
            .appendField('{{p.name}}');
{{~ end ~}}
        this.setColour('{{color}}');
        this.setTooltip('{{description}}');
        this.setHelpUrl('{{url}}');
    }
};
javascript.javascriptGenerator.forBlock['{{blockname}}'] = (block, generator) => {
{{~ for p in properties ~}} 
    const _{{p.name}} = generator.valueToCode(block, '{{p.name}}', javascript.javascriptGenerator.ORDER_ATOMIC);
{{~ end ~}}

    return [`new {{jsfunction}}({{~ for p in properties ~}} ${_{{p.name}}}{{~ com ~}}{{~ end ~}})`, javascript.javascriptGenerator.ORDER_NONE];

};